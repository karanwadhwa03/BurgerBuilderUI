{"version":3,"sources":["components/burger.png","hoc/wrap.js","components/toolbar.js","components/layout.js","containers/burger/burgerindegriendents.js","containers/burger/burger.js","containers/controls/control.js","containers/controls/controls.js","containers/burgerbuild.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrap","props","children","Toolbar","class","href","src","logo","className","Layout","BurgerIngredient","ingredient","this","type","Component","Burger","required","Object","keys","ingredients","map","keey","Array","_","i","key","reduce","arr","el","concat","length","Control","onClick","Added","Subtract","controls","label","Controls","price","data-toggle","data-target","id","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","items","igkey","Price","salad","bacon","meat","cheese","BurgerBuild","state","AddHandler","oldcount","use","setState","removeHandler","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5fc1dbe0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger.b8503d26.png\";"," var Wrap =(props)=>props.children\r\n\r\n\r\n\r\nexport default Wrap","import React from 'react'\r\nimport logo from './burger.png'\r\nimport './../App.css'\r\nconst Toolbar=()=>{\r\n    return(\r\n    <div>\r\n\r\n        <nav class=\"navbar navbar-dark bg-success \">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n        \r\n        \r\n        <img src={logo} className=\"burgerheight mr-2\"></img> \r\n        Burger\r\n        </a>\r\n        <a href=\"\" className=\"nav-link text-white \">HOME </a>\r\n\r\n        <a href=\"\" className=\"nav-link text-white bg-dark \">CheckOut </a>\r\n        \r\n        </nav>\r\n    </div>\r\n    )\r\n\r\n}\r\nexport default Toolbar","import React from 'react'\r\nimport Wrap from './../hoc/wrap'\r\nimport Toolbar from './toolbar'\r\nfunction Layout(props){\r\n    return (\r\n        <Wrap>\r\n            <Toolbar></Toolbar>\r\n            {props.children}\r\n        </Wrap>\r\n\r\n    )\r\n\r\n}\r\nexport default Layout","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './indegrients.css'\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n        let ingredient=null;\r\n\r\n        switch ( this.props.type ) {\r\n            case ( 'bread-bottom' ):\r\n                ingredient = <div className=\"BreadBottom\"></div>;\r\n                break;\r\n            case ( 'bread-top' ):\r\n                ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ( 'meat' ):\r\n                ingredient = <div className=\"Meat\"></div>;\r\n                break;\r\n            case ( 'cheese' ):\r\n                ingredient = <div className=\"Cheese\"></div>;\r\n                break;\r\n            case ( 'bacon' ):\r\n                ingredient = <div className=\"Bacon\"></div>;\r\n                break;\r\n            case ( 'salad' ):\r\n                ingredient = <div className=\"Salad\"></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react'\r\nimport BurgerIngredient from './burgerindegriendents'\r\nimport './height.css'\r\n\r\nfunction Burger(props){\r\n    var required=Object.keys(props.ingredients)\r\n    .map(\r\n        keey=>{\r\n           return [...Array(props.ingredients[keey])].map(\r\n            (_,i)=>{\r\n                return <BurgerIngredient type={keey} key={keey+i}></BurgerIngredient>\r\n\r\n            }\r\n\r\n\r\n           )\r\n\r\n        }\r\n\r\n\r\n    ).reduce((arr,el)=>{\r\n        return arr.concat(el)\r\n\r\n\r\n    },[])\r\n    if(required.length===0)\r\n    required=<h5 className=\"text-center\">Please Add Some Ingredients</h5>\r\n\r\n    return (\r\n        <div className=\"row justify-content-center mt-3\">\r\n        <div className=\"col-md-4  height \">\r\n        <BurgerIngredient type=\"bread-top\"></BurgerIngredient>\r\n            {required}\r\n            <BurgerIngredient type=\"bread-bottom\"></BurgerIngredient>\r\n            \r\n\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default Burger","import React from 'react'\r\n\r\nfunction Control(props){\r\n    return (\r\n        <div className=\"container mt-2\">\r\n        <div className=\"row align-items-center\">\r\n\r\n            <div className=\"col-8\">\r\n                <h5>{props.type}</h5>\r\n            </div>\r\n            <div className=\"col-2 p-1\" >\r\n                <button className=\"btn btn-secondary\" onClick={props.Added}>\r\n                    More\r\n                </button>\r\n            </div>\r\n            <div className=\"col-2 p-1\">\r\n                <button className=\"btn btn-danger\" onClick={props.Subtract}>\r\n                    Less\r\n                </button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default Control","import React from 'react'\r\nimport Control from './control'\r\nimport axios from 'axios'\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\n\r\nfunction Controls (props){\r\n    return(\r\n        <div className=\"bg-success p-2\">\r\n        <h4 className=\"text-center\">Total Price: {props.price}</h4>\r\n        {controls.map(el=>{\r\n\r\n            return (\r\n             <Control type={el.label} key={el.type} \r\n             Added={()=>props.Added(el.type)} Subtract={()=>props.Subtract(el.type)}\r\n            \r\n\r\n    \r\n    ></Control>\r\n\r\n)\r\n\r\n})}\r\n\r\n<div className=\"text-center\">\r\n<button type=\"button\" class=\"btn btn-dark btn-lg\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n  ORDER NOW\r\n</button>\r\n\r\n\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">ORDER SUMMARY</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div>\r\n            \r\n\r\n            \r\n            {\r\n                Object.keys(props.items)\r\n                .map(igkey=>{\r\n                    return(\r\n                        <div>\r\n\r\n                       <h4 className=\"text-uppercase\" key={igkey}> {igkey} : {props.items[igkey]} </h4>\r\n                        </div>\r\n                    )\r\n\r\n                })\r\n            }\r\n        \r\n           <h3> Total Price:{props.price} </h3>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" >CANCEL</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" >CONTINUE</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n        </div>\r\n        )\r\n    \r\n    \r\n}\r\nexport default Controls","import React,{Component} from 'react'\r\nimport Burger from './burger/burger'\r\nimport Controls from './controls/controls'\r\nlet Price={\r\n    salad:5,\r\n    bacon:3,\r\n    meat:10,\r\n    cheese:8\r\n};\r\n\r\n\r\n\r\nclass BurgerBuild extends Component{\r\n    state={\r\n        ingredients:{\r\n            salad:0,\r\n            bacon:0,\r\n            cheese:0,\r\n            meat:0\r\n\r\n        },\r\n        price:20\r\n\r\n    }\r\n    AddHandler=(type)=>{\r\n        var oldcount=this.state.ingredients[type];\r\n        oldcount=oldcount+1;\r\n        var price=this.state.price;\r\n        price=price+Price[type];\r\n        var use={\r\n            ...this.state.ingredients\r\n\r\n        }\r\n        use[type]=oldcount;\r\n        this.setState({\r\n            ingredients:use,\r\n            price:price\r\n\r\n        })\r\n\r\n\r\n        //console.log(this.state.price)\r\n    }\r\n\r\n    removeHandler=(type)=>{\r\n        var oldcount=this.state.ingredients[type];\r\n        if(oldcount<=0)\r\n        return;\r\n        oldcount=oldcount-1;\r\n       \r\n        var price=this.state.price;\r\n        price=price-Price[type];\r\n        var use={\r\n            ...this.state.ingredients\r\n\r\n        }\r\n        use[type]=oldcount;\r\n        this.setState({\r\n            ingredients:use,\r\n            price:price\r\n\r\n        })\r\n\r\n\r\n        //console.log(this.state.price)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Burger ingredients={this.state.ingredients}></Burger>\r\n                <div>\r\n                   <Controls Added={this.AddHandler} Subtract={this.removeHandler} price={this.state.price} items={this.state.ingredients}></Controls>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default BurgerBuild\r\n","import React,{Component} from 'react'\nimport Layout from './components/layout'\nimport BurgerBuild from './containers/burgerbuild'\n\n\n\n\n\nclass App extends Component{\n  render(){\n    return (\n      <div>\n\n      \n      <Layout>\n        \n      </Layout>\n      <BurgerBuild></BurgerBuild>\n\n      </div>\n\n      )\n\n\n  }\n\n\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}